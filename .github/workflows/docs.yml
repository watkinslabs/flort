name: Deploy Documentation

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - 'README.md'
      - 'CHANGELOG.md'
      - 'flort/**/*.py'
  pull_request:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Debug file structure
        run: |
          echo "=== Current directory ==="
          pwd
          echo "=== List all files ==="
          find . -name "*.txt" -o -name "*.yml" -o -name "*.py" | head -20
          echo "=== Check docs directory ==="
          ls -la docs/ || echo "docs directory not found"
          echo "=== Check for requirements files ==="
          find . -name "*requirements*" -type f

      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Install Flort package
        run: |
          if [ -f setup.py ]; then
            pip install -e .
          else
            echo "No setup.py found, skipping package install"
          fi

      - name: Install documentation dependencies
        run: |
          # Install MkDocs and essential plugins directly
          pip install mkdocs>=1.5.0
          pip install mkdocs-material>=9.4.0
          pip install mkdocs-minify-plugin>=0.7.0
          pip install mkdocstrings[python]>=0.24.0
          pip install mkdocs-autorefs>=0.5.0
          pip install griffe>=0.38.0
          pip install pymdown-extensions>=10.0
          
          # Try to install from requirements file if it exists
          if [ -f docs/requirements.txt ]; then
            echo "Installing from docs/requirements.txt"
            pip install -r docs/requirements.txt
          else
            echo "docs/requirements.txt not found, using direct installs"
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Build with MkDocs
        run: |
          echo "=== Verifying mkdocs.yml ==="
          if [ -f mkdocs.yml ]; then
            echo "mkdocs.yml found"
            head -10 mkdocs.yml
          else
            echo "mkdocs.yml not found!"
            exit 1
          fi
          
          echo "=== Building documentation ==="
          mkdocs build --clean --strict
          
          echo "=== Verifying build output ==="
          ls -la site/ || echo "site directory not created"
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  # Deployment job
  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4